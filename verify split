from collections import defaultdict

"""
This script processes the output generated by the SAM-to-BSJ conversion script. It takes the resulting file as input
and identifies reads with split alignments. The output file contains only those reads with IDs appearing
more than twice, indicating split alignments.
"""

input_file_path = "output_bsj_data.csv"
output_file_path = "possible_BSJ_reads.txt"

id_counts = defaultdict(int)

with open(input_file_path, "r") as file:
    for line in file:
        if "Read:" in line:
            id_part = line.split("Read:")[1].split()[0]
            id_counts[id_part] += 1

unique_id_count = len(id_counts)

with open(input_file_path, "r") as file, open(output_file_path, "w") as output_file:
    for line in file:
        if "Read:" in line:
            id_part = line.split("Read:")[1].split()[0]
            if id_counts[id_part] > 2:
                output_file.write(line)

print(f"\nNumber of unique IDs: {unique_id_count}\n")
print(f"Output file '{output_file_path}' created successfully.")
